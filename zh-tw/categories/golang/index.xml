<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Ricky</title><link>https://linzeyan.github.io/zh-tw/categories/golang/</link><description>Recent content in Golang on Ricky</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Wed, 10 Sep 2025 09:50:00 +0800</lastBuildDate><atom:link href="https://linzeyan.github.io/zh-tw/categories/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Containers From Scratch by Golang (feat. Liz Rice)</title><link>https://linzeyan.github.io/zh-tw/posts/20250910-containers-from-scratch-by-golang-feat-liz-rice/</link><pubDate>Wed, 10 Sep 2025 09:50:00 +0800</pubDate><guid>https://linzeyan.github.io/zh-tw/posts/20250910-containers-from-scratch-by-golang-feat-liz-rice/</guid><description>&lt;p>&lt;a href="https://baconyao.notion.site/Containers-From-Scratch-by-Golang-feat-Liz-Rice-2638a3a7d9d48053ae1dce0763fb52e8" target="_blank" rel="noopener">Containers From Scratch by Golang (feat. Liz Rice)&lt;/a>
&lt;a href="https://github.com/baconYao/container-from-scratch-golang" target="_blank" rel="noopener">container-from-scratch-golang&lt;/a>&lt;/p>
&lt;p>As we enhance the functionality of our small program, we will explore the following topics, allowing us to create a basic simulation of a non-production container environment.&lt;/p>
&lt;ol>
&lt;li>UTS Namespace&lt;/li>
&lt;li>Chroot&lt;/li>
&lt;li>PID Namespace&lt;/li>
&lt;li>Mount Namespace&lt;/li>
&lt;li>Control Group&lt;/li>
&lt;li>Rootless Container&lt;/li>
&lt;/ol></description></item><item><title>淺談 Go Iterator</title><link>https://linzeyan.github.io/zh-tw/posts/20250906-golang-iterator/</link><pubDate>Sat, 06 Sep 2025 21:30:00 +0800</pubDate><guid>https://linzeyan.github.io/zh-tw/posts/20250906-golang-iterator/</guid><description>&lt;p>&lt;a href="https://ganhua.wang/go-iterator" target="_blank" rel="noopener">淺談 Go Iterator&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Seq&lt;/span>[&lt;span style="color:#a6e22e">V&lt;/span> &lt;span style="color:#66d9ef">any&lt;/span>] &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">yield&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">V&lt;/span>) &lt;span style="color:#66d9ef">bool&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Seq2&lt;/span>[&lt;span style="color:#a6e22e">K&lt;/span>, &lt;span style="color:#a6e22e">V&lt;/span> &lt;span style="color:#66d9ef">any&lt;/span>] &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">yield&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">K&lt;/span>, &lt;span style="color:#a6e22e">V&lt;/span>) &lt;span style="color:#66d9ef">bool&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Supply chain attack</title><link>https://linzeyan.github.io/zh-tw/posts/20240913-golang/</link><pubDate>Fri, 13 Sep 2024 09:41:00 +0800</pubDate><guid>https://linzeyan.github.io/zh-tw/posts/20240913-golang/</guid><description>&lt;h1 id="go-articles">Go articles&lt;/h1>
&lt;h2 id="提高警惕供应链攻击就在你我身边">&lt;a href="https://v2ex.com/t/1072079" target="_blank" rel="noopener">提高警惕，供应链攻击就在你我身边&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;code>github.com/siruspen/logrus&lt;/code> 假&lt;/li>
&lt;li>&lt;code>github.com/sirupsen/logrus&lt;/code> 真&lt;/li>
&lt;/ul></description></item><item><title>Go articles</title><link>https://linzeyan.github.io/zh-tw/posts/20240820-golang/</link><pubDate>Tue, 20 Aug 2024 08:55:00 +0800</pubDate><guid>https://linzeyan.github.io/zh-tw/posts/20240820-golang/</guid><description>&lt;h1 id="go-articles">Go articles&lt;/h1>
&lt;h2 id="学会-gin-参数校验之-validator-库看这一篇就足够了">&lt;a href="https://juejin.cn/post/6863765115456454664" target="_blank" rel="noopener">学会 gin 参数校验之 validator 库，看这一篇就足够了&lt;/a>&lt;/h2>
&lt;h3 id="字符串约束">字符串约束&lt;/h3>
&lt;p>excludesall：不包含参数中任意的 UNICODE 字符，例如 excludesall=ab&lt;/p>
&lt;p>excludesrune：不包含参数表示的 rune 字符，excludesrune=asong&lt;/p>
&lt;p>startswith：以参数子串为前缀，例如 startswith=hi&lt;/p>
&lt;p>endswith：以参数子串为后缀，例如 endswith=bye。&lt;/p>
&lt;p>contains=：包含参数子串，例如 contains=email&lt;/p>
&lt;p>containsany：包含参数中任意的 UNICODE 字符，例如 containsany=ab&lt;/p>
&lt;p>containsrune：包含参数表示的 rune 字符，例如`containsrune=asong&lt;/p>
&lt;p>excludes：不包含参数子串，例如 excludes=email&lt;/p>
&lt;h3 id="范围约束">范围约束&lt;/h3>
&lt;p>范围约束的字段类型分为三种：&lt;/p>
&lt;p>对于数值，我们则可以约束其值
对于切片、数组和 map，我们则可以约束其长度
对于字符串，我们则可以约束其长度&lt;/p>
&lt;h4 id="常用-tag-介绍">常用 tag 介绍：&lt;/h4>
&lt;p>ne：不等于参数值，例如 ne=5
gt：大于参数值，例如 gt=5
gte：大于等于参数值，例如 gte=50
lt：小于参数值，例如 lt=50
lte：小于等于参数值，例如 lte=50
oneof：只能是列举出的值其中一个，这些值必须是数值或字符串，以空格分隔，如果字符串中有空格，将字符串用单引号包围，例如 oneof=male female。
eq：等于参数值，注意与 len 不同。对于字符串，eq 约束字符串本身的值，而 len 约束字符串长度。例如 eq=10
len：等于参数值，例如 len=10
max：小于等于参数值，例如 max=10
min：大于等于参数值，例如 min=10&lt;/p>
&lt;h3 id="fields-约束">Fields 约束&lt;/h3>
&lt;p>eqfield：定义字段间的相等约束，用于约束同一结构体中的字段。例如：eqfield=Password
eqcsfield：约束统一结构体中字段等于另一个字段（相对），确认密码时可以使用，例如：eqfiel=ConfirmPassword
nefield：用来约束两个字段是否相同，确认两种颜色是否一致时可以使用，例如：nefield=Color1
necsfield：约束两个字段是否相同（相对）&lt;/p></description></item><item><title>Go leetcode</title><link>https://linzeyan.github.io/zh-tw/posts/20240620-leetcode/</link><pubDate>Thu, 20 Jun 2024 18:15:00 +0800</pubDate><guid>https://linzeyan.github.io/zh-tw/posts/20240620-leetcode/</guid><description>&lt;p>&lt;a href="https://books.halfrost.com/leetcode/" target="_blank" rel="noopener">https://books.halfrost.com/leetcode/&lt;/a>&lt;/p></description></item></channel></rss>