[{"categories":null,"contents":" Lookup # List all plugins ansible-doc -t lookup -l # Use `ansible-doc -t lookup \u0026lt;plugin\u0026gt;` to see detail ansible-doc -t lookup ping ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/bash/ansible/","summary":" Lookup # List all plugins ansible-doc -t lookup -l # Use `ansible-doc -t lookup \u0026lt;plugin\u0026gt;` to see detail ansible-doc -t lookup ping ","tags":null,"title":"Ansible Command"},{"categories":null,"contents":" Multiple build-arg docker build . -f ./scripts/Dockerfile \\ --build-arg Date=$(date) \\ --build-arg Tag=$(git rev-list -n 1 --tags) \\ --build-arg Commit=$(git describe --tags --abbrev=0) \\ -t ops-cli Run container in different platform finch run -it --rm --platform=linux/arm64 zeyanlin/ops-cli /bin/sh ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/bash/docker/","summary":" Multiple build-arg docker build . -f ./scripts/Dockerfile \\ --build-arg Date=$(date) \\ --build-arg Tag=$(git rev-list -n 1 --tags) \\ --build-arg Commit=$(git describe --tags --abbrev=0) \\ -t ops-cli Run container in different platform finch run -it --rm --platform=linux/arm64 zeyanlin/ops-cli /bin/sh ","tags":null,"title":"Docker Command"},{"categories":null,"contents":" File create time 1. Find Inode $ stat dns.yaml File: dns.yaml Size: 1003 Blocks: 8 IO Block: 4096 regular file Device: ca01h/51713d Inode: 3595636 Links: 1 Access: (0644/-rw-r--r--) Uid: ( 1000/ ubuntu) Gid: ( 1000/ ubuntu) Access: 2022-05-03 12:59:59.996755279 +0800 Modify: 2021-12-10 18:27:54.157585209 +0800 Change: 2022-01-07 14:57:58.619727878 +0800 Birth: - or\n$ ls -i dns.yaml 3585173 dns.yaml 2. Find Filesystem $ df dns.yaml Filesystem 1K-blocks Used Available Use% Mounted on /dev/root 101583780 25703988 75863408 26% / 3. Get Create Time $ sudo debugfs -R \u0026#39;stat \u0026lt;3595636\u0026gt;\u0026#39; /dev/root Inode: 3595636 Type: regular Mode: 0644 Flags: 0x80000 Generation: 449657737 Version: 0x00000000:00000001 User: 1000 Group: 1000 Project: 0 Size: 1003 File ACL: 0 Links: 1 Blockcount: 8 Fragment: Address: 0 Number: 0 Size: 0 ctime: 0x61d7e476:93c13018 -- Fri Jan 7 14:57:58 2022 atime: 0x6270b6cf:eda51d3c -- Tue May 3 12:59:59 2022 mtime: 0x61b32baa:25923ce4 -- Fri Dec 10 18:27:54 2021 crtime: 0x61b32baa:25923ce4 -- Fri Dec 10 18:27:54 2021 Size of extra inode fields: 32 Inode checksum: 0x5b176bb2 EXTENTS: (0):2665902 Display Ubuntu\u0026#39;s Message of the Day sudo chmod +x /etc/update-motd.d/* ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/bash/file/","summary":"File create time 1. Find Inode $ stat dns.yaml File: dns.yaml Size: 1003 Blocks: 8 IO Block: 4096 regular file Device: ca01h/51713d Inode: 3595636 Links: 1 Access: (0644/-rw-r--r--) Uid: ( 1000/ ubuntu) Gid: ( 1000/ ubuntu) Access: 2022-05-03 12:59:59.996755279 +0800 Modify: 2021-12-10 18:27:54.157585209 +0800 Change: 2022-01-07 14:57:58.619727878 +0800 Birth: - or\n$ ls -i dns.yaml 3585173 dns.yaml 2. Find Filesystem $ df dns.yaml Filesystem 1K-blocks Used Available Use% Mounted on /dev/root 101583780 25703988 75863408 26% / 3.","tags":null,"title":"File Related Command"},{"categories":null,"contents":" Search in git git rev-list --all | xargs git grep -F \u0026#39;\u0026#39; Count commits git rev-list --count main View a file of another branch git show dev:main.go Take a backup of untracked files git ls-files --others --exclude-standard -z | xargs -0 tar rvf backup-untracked.zip Submodule # Add submodule git submodule add https://github.com/linzeyan/toha.git themes/toha # Update submodule git submodule update --init --recursive # Remove submodule git rm \u0026lt;path-to-submodule\u0026gt; rm -rf .git/modules/\u0026lt;path-to-submodule\u0026gt; git config --remove-section submodule.\u0026lt;path-to-submodule\u0026gt;. rm -f .gitmodules ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/bash/git/","summary":"Search in git git rev-list --all | xargs git grep -F \u0026#39;\u0026#39; Count commits git rev-list --count main View a file of another branch git show dev:main.go Take a backup of untracked files git ls-files --others --exclude-standard -z | xargs -0 tar rvf backup-untracked.zip Submodule # Add submodule git submodule add https://github.com/linzeyan/toha.git themes/toha # Update submodule git submodule update --init --recursive # Remove submodule git rm \u0026lt;path-to-submodule\u0026gt; rm -rf .","tags":null,"title":"Git Command"},{"categories":null,"contents":" Install brew install gnupg Generate gpg --full-generate-key gpg --list-secret-keys Add to git gpg --armor --export 51ADF7101CA64B2508AE29EEC279555531A1DD62 Set .gitconfig git config user.email zeyanlin@outlook.com git config user.name Ricky git config user.signingkey 51ADF7101CA64B2508AE29EEC279555531A1DD62 git config commit.gpgsign true Delete key gpg --delete-secret-keys 51ADF7101CA64B2508AE29EEC279555531A1DD62 Backup key # https://www.jwillikers.com/backup-and-restore-a-gpg-key gpg --list-secret-keys --keyid-format LONG # Export key as a file, replace email-address and Enter the private key’s passphrase gpg -o private.gpg --export-options backup --export-secret-keys rickylin@cloud-miner.net # Restore key and enter the private key’s passphrase gpg --import-options restore --import private.gpg If GPG not work echo \u0026#39;export GPG_TTY=$(tty)\u0026#39; \u0026gt;\u0026gt; ~/.zshrc gpgconf –kill gpg-agent exec $SHELL Encrypt file # Encrypt file gpg --symmetric --cipher-algo aes256 archive_file.tar # Decrypt file gpg --output archive_file.tar --decrypt archive_file.tar.gpg ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/bash/gpg/","summary":"Install brew install gnupg Generate gpg --full-generate-key gpg --list-secret-keys Add to git gpg --armor --export 51ADF7101CA64B2508AE29EEC279555531A1DD62 Set .gitconfig git config user.email zeyanlin@outlook.com git config user.name Ricky git config user.signingkey 51ADF7101CA64B2508AE29EEC279555531A1DD62 git config commit.gpgsign true Delete key gpg --delete-secret-keys 51ADF7101CA64B2508AE29EEC279555531A1DD62 Backup key # https://www.jwillikers.com/backup-and-restore-a-gpg-key gpg --list-secret-keys --keyid-format LONG # Export key as a file, replace email-address and Enter the private key’s passphrase gpg -o private.gpg --export-options backup --export-secret-keys rickylin@cloud-miner.net # Restore key and enter the private key’s passphrase gpg --import-options restore --import private.","tags":null,"title":"GPG Command"},{"categories":null,"contents":" link flowchart LR A --o B B --x C D o--o E E \u0026lt;--\u0026gt; F F x--x G shapes graph LR id1[方框] id2(帶有圓角的方框) id3([體育場形狀]) id4[[子例程]] id5[(圓柱狀)] id6((圓形)) id7\u0026gt;非對稱形狀] id8{菱形} id9{{六角形}} id10[/平行四邊形1/] id11[\\平行四邊形 2\\] id12[/梯形 1\\] id13[\\梯形 2/] id14(((雙圓))) subgraphs flowchart TD c1--\u0026gt;a2 subgraph one a1--\u0026gt;a2 end subgraph \u0026#34;`**two**`\u0026#34; b1--\u0026gt;b2 end subgraph three c1--\u0026gt;c2 end sequence sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! gantt gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d class classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label state stateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open --\u0026gt; closed: Close closed --\u0026gt; locked: Lock locked --\u0026gt; closed: Unlock closed --\u0026gt; open: Open git gitGraph: options { \u0026#34;nodeSpacing\u0026#34;: 150, \u0026#34;nodeRadius\u0026#34;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch graph LR A --- B A ---|text| B C --\u003e D C --\u003e|text| D E -.- F E -.-|text| F G -.-\u003e H G -.-\u003e|text| H I === J I ===|text| J ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/docs/mermaid/","summary":"link flowchart LR A --o B B --x C D o--o E E \u0026lt;--\u0026gt; F F x--x G shapes graph LR id1[方框] id2(帶有圓角的方框) id3([體育場形狀]) id4[[子例程]] id5[(圓柱狀)] id6((圓形)) id7\u0026gt;非對稱形狀] id8{菱形} id9{{六角形}} id10[/平行四邊形1/] id11[\\平行四邊形 2\\] id12[/梯形 1\\] id13[\\梯形 2/] id14(((雙圓))) subgraphs flowchart TD c1--\u0026gt;a2 subgraph one a1--\u0026gt;a2 end subgraph \u0026#34;`**two**`\u0026#34; b1--\u0026gt;b2 end subgraph three c1--\u0026gt;c2 end sequence sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail.","tags":null,"title":"markdown notes"},{"categories":null,"contents":" Check port status # `(echo \u0026gt;/dev/tcp/${host}/${port})` (echo \u0026gt;/dev/tcp/192.168.57.24/80) \u0026amp;\u0026gt;/dev/null \u0026amp;\u0026amp; echo \u0026#34;open\u0026#34; || echo \u0026#34;closed\u0026#34; timeout 1 bash -c \u0026#39;\u0026gt;/dev/tcp/192.168.57.24/80 \u0026amp;\u0026gt;/dev/null\u0026#39; \u0026amp;\u0026amp; echo \u0026#34;open\u0026#34; || echo \u0026#34;closed\u0026#34; timeout 1 bash -c \u0026#39;\u0026gt;/dev/tcp/192.168.57.24/80\u0026#39; \u0026amp;\u0026amp; echo \u0026#34;open\u0026#34; || echo \u0026#34;closed\u0026#34; ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/bash/network/","summary":" Check port status # `(echo \u0026gt;/dev/tcp/${host}/${port})` (echo \u0026gt;/dev/tcp/192.168.57.24/80) \u0026amp;\u0026gt;/dev/null \u0026amp;\u0026amp; echo \u0026#34;open\u0026#34; || echo \u0026#34;closed\u0026#34; timeout 1 bash -c \u0026#39;\u0026gt;/dev/tcp/192.168.57.24/80 \u0026amp;\u0026gt;/dev/null\u0026#39; \u0026amp;\u0026amp; echo \u0026#34;open\u0026#34; || echo \u0026#34;closed\u0026#34; timeout 1 bash -c \u0026#39;\u0026gt;/dev/tcp/192.168.57.24/80\u0026#39; \u0026amp;\u0026amp; echo \u0026#34;open\u0026#34; || echo \u0026#34;closed\u0026#34; ","tags":null,"title":"Network Related Command"},{"categories":null,"contents":" texlive # $ brew install textlive # $ npm i -g mermaid-filter # Render mermaid pandoc -F mermaid-filter -o readme.pdf readme.md ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/bash/pandoc/","summary":" texlive # $ brew install textlive # $ npm i -g mermaid-filter # Render mermaid pandoc -F mermaid-filter -o readme.pdf readme.md ","tags":null,"title":"Pandoc Command"},{"categories":null,"contents":" Generate ssh key ssh-keygen -m PEM -t rsa -b 4096 -C \u0026#34;zeyanlin@outlook.com\u0026#34; ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/bash/ssh/","summary":" Generate ssh key ssh-keygen -m PEM -t rsa -b 4096 -C \u0026#34;zeyanlin@outlook.com\u0026#34; ","tags":null,"title":"SSH Command"},{"categories":null,"contents":" array package main import ( \u0026#34;fmt\u0026#34; ) func main() { a := [5]int{1, 2, 3, 4, 5} t := a[3:4:4] fmt.Println(t[0]) } A. 3 B. 4 C. compilation error Answer Try it B ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/array/","summary":" array package main import ( \u0026#34;fmt\u0026#34; ) func main() { a := [5]int{1, 2, 3, 4, 5} t := a[3:4:4] fmt.Println(t[0]) } A. 3 B. 4 C. compilation error Answer Try it B ","tags":null,"title":"Array"},{"categories":null,"contents":" channel package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { ch := make(chan int, 1000) go func() { for i := 0; i \u0026lt; 10; i++ { ch \u0026lt;- i } }() go func() { for { a, ok := \u0026lt;-ch if !ok { fmt.Println(\u0026#34;close\u0026#34;) return } fmt.Println(\u0026#34;a: \u0026#34;, a) } }() close(ch) fmt.Println(\u0026#34;ok\u0026#34;) time.Sleep(time.Second * 100) } Answer Try it ok panic: send on closed channel channel1 package main import ( \u0026#34;fmt\u0026#34; ) func main() { c := make(chan int) close(c) val, _ := \u0026lt;-c fmt.Println(val) } Answer Try it 0 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/channel/","summary":"channel package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { ch := make(chan int, 1000) go func() { for i := 0; i \u0026lt; 10; i++ { ch \u0026lt;- i } }() go func() { for { a, ok := \u0026lt;-ch if !ok { fmt.Println(\u0026#34;close\u0026#34;) return } fmt.Println(\u0026#34;a: \u0026#34;, a) } }() close(ch) fmt.Println(\u0026#34;ok\u0026#34;) time.Sleep(time.Second * 100) } Answer Try it ok panic: send on closed channel channel1 package main import ( \u0026#34;fmt\u0026#34; ) func main() { c := make(chan int) close(c) val, _ := \u0026lt;-c fmt.","tags":null,"title":"Channel"},{"categories":null,"contents":" context package main import ( \u0026#34;context\u0026#34; \u0026#34;fmt\u0026#34; ) func f(ctx context.Context) { context.WithValue(ctx, \u0026#34;foo\u0026#34;, -6) } func main() { ctx := context.TODO() f(ctx) fmt.Println(ctx.Value(\u0026#34;foo\u0026#34;)) } A. -6 B. 0 C. \u0026lt;nil\u0026gt; D: panic Answer Try it C context1 package main import( \u0026#34;fmt\u0026#34; \u0026#34;encoding/json\u0026#34; \u0026#34;context\u0026#34; ) func main() { data, _ := json.Marshal(context.WithValue(context.Background(), \u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;)) fmt.Println(string(data)) } Answer Try it {\"Context\":0} ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/context/","summary":" context package main import ( \u0026#34;context\u0026#34; \u0026#34;fmt\u0026#34; ) func f(ctx context.Context) { context.WithValue(ctx, \u0026#34;foo\u0026#34;, -6) } func main() { ctx := context.TODO() f(ctx) fmt.Println(ctx.Value(\u0026#34;foo\u0026#34;)) } A. -6 B. 0 C. \u0026lt;nil\u0026gt; D: panic Answer Try it C context1 package main import( \u0026#34;fmt\u0026#34; \u0026#34;encoding/json\u0026#34; \u0026#34;context\u0026#34; ) func main() { data, _ := json.Marshal(context.WithValue(context.Background(), \u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;)) fmt.Println(string(data)) } Answer Try it {\"Context\":0} ","tags":null,"title":"Context"},{"categories":null,"contents":" defer package main import ( \u0026#34;fmt\u0026#34; ) func main() { defer_call() } func defer_call() { defer func() { fmt.Println(\u0026#34;1\u0026#34;) }() defer func() { fmt.Println(\u0026#34;2\u0026#34;) }() defer func() { fmt.Println(\u0026#34;3\u0026#34;) }() panic(\u0026#34;4\u0026#34;) } Answer Try it 3 2 1 panic: 4 defer1 package main import ( \u0026#34;fmt\u0026#34; ) type Person struct { age int } func main() { person := \u0026amp;Person{28} defer fmt.Println(person.age) defer func(p *Person) { fmt.Println(p.age) }(person) defer func() { fmt.Println(person.age) }() person.age = 29 } Answer Try it 29 29 28 defer2 package main import ( \u0026#34;fmt\u0026#34; ) type Person struct { age int } func main() { person := \u0026amp;Person{28} defer fmt.Println(person.age) defer func(p *Person) { fmt.Println(p.age) }(person) defer func() { fmt.Println(person.age) }() person = \u0026amp;Person{29} } Answer Try it 29 28 28 defer3 package main import ( \u0026#34;fmt\u0026#34; ) var a bool = true func main() { defer func() { fmt.Println(\u0026#34;1\u0026#34;) }() if a == true { fmt.Println(\u0026#34;2\u0026#34;) return } defer func() { fmt.Println(\u0026#34;3\u0026#34;) }() } Answer Try it 2 1 defer4 package main import \u0026#34;fmt\u0026#34; type temp struct{} func (t *temp) Add(elem int) *temp { fmt.Print(elem) return \u0026amp;temp{} } func main() { tt := \u0026amp;temp{} defer tt.Add(1).Add(2) tt.Add(3) } A. 132 B. 123 C. 312 D. 321 Answer Try it A ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/defer/","summary":"defer package main import ( \u0026#34;fmt\u0026#34; ) func main() { defer_call() } func defer_call() { defer func() { fmt.Println(\u0026#34;1\u0026#34;) }() defer func() { fmt.Println(\u0026#34;2\u0026#34;) }() defer func() { fmt.Println(\u0026#34;3\u0026#34;) }() panic(\u0026#34;4\u0026#34;) } Answer Try it 3 2 1 panic: 4 defer1 package main import ( \u0026#34;fmt\u0026#34; ) type Person struct { age int } func main() { person := \u0026amp;Person{28} defer fmt.Println(person.age) defer func(p *Person) { fmt.Println(p.age) }(person) defer func() { fmt.","tags":null,"title":"Defer"},{"categories":null,"contents":" goroutine package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { ch1 := make(chan int) go fmt.Println(\u0026lt;-ch1) ch1 \u0026lt;- 5 time.Sleep(1 * time.Second) } A. 5 B. deadlock C. compilation error Answer Try it B ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/goroutine/","summary":" goroutine package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { ch1 := make(chan int) go fmt.Println(\u0026lt;-ch1) ch1 \u0026lt;- 5 time.Sleep(1 * time.Second) } A. 5 B. deadlock C. compilation error Answer Try it B ","tags":null,"title":"Goroutine"},{"categories":null,"contents":" interface package main import ( \u0026#34;fmt\u0026#34; ) type People interface { Show() } type Student struct{} func (stu *Student) Show() { } func live() People { var stu *Student return stu } func main() { if live() == nil { fmt.Println(\u0026#34;AAAAAAA\u0026#34;) } else { fmt.Println(\u0026#34;BBBBBBB\u0026#34;) } } Answer Try it BBBBBBB interface1 package main import ( \u0026#34;fmt\u0026#34; ) type People interface { Speak(string) string } type Student struct{} func (stu *Student) Speak(think string) (talk string) { if think == \u0026#34;love\u0026#34; { talk = \u0026#34;You are a good boy\u0026#34; } else { talk = \u0026#34;hi\u0026#34; } return } func main() { var peo People = Student{} think := \u0026#34;love\u0026#34; fmt.Println(peo.Speak(think)) } Answer Try it compilation error cannot use Student{} (value of type Student) as People value in variable declaration: Student does not implement People (method Speak has pointer receiver) interface2 package main import \u0026#34;fmt\u0026#34; type T1 struct { String func() string } func (T1) Error() string { return \u0026#34;T1.Error\u0026#34; } type T2 struct { Error func() string } func (T2) String() string { return \u0026#34;T2.String\u0026#34; } var t1 = T1{String: func() string { return \u0026#34;T1.String\u0026#34; }} var t2 = T2{Error: func() string { return \u0026#34;T2.Error\u0026#34; }} func main() { fmt.Println(t1.Error(), t1.String()) fmt.Println(t2.Error(), t2.String()) fmt.Println(t1, t2) } Answer Try it T1.Error T1.String T2.Error T2.String T1.Error T2.String interface3 package main import \u0026#34;fmt\u0026#34; func main() { var p [100]int var m interface{} = [...]int{99: 0} fmt.Println(p == m) } Answer Try it true ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/interface/","summary":"interface package main import ( \u0026#34;fmt\u0026#34; ) type People interface { Show() } type Student struct{} func (stu *Student) Show() { } func live() People { var stu *Student return stu } func main() { if live() == nil { fmt.Println(\u0026#34;AAAAAAA\u0026#34;) } else { fmt.Println(\u0026#34;BBBBBBB\u0026#34;) } } Answer Try it BBBBBBB interface1 package main import ( \u0026#34;fmt\u0026#34; ) type People interface { Speak(string) string } type Student struct{} func (stu *Student) Speak(think string) (talk string) { if think == \u0026#34;love\u0026#34; { talk = \u0026#34;You are a good boy\u0026#34; } else { talk = \u0026#34;hi\u0026#34; } return } func main() { var peo People = Student{} think := \u0026#34;love\u0026#34; fmt.","tags":null,"title":"Interface"},{"categories":null,"contents":" iota package main import \u0026#34;fmt\u0026#34; const ( x = iota _ y z = \u0026#34;zz\u0026#34; k p = iota ) func main() { fmt.Println(x, y, z, k, p) } Answer Try it 0 2 zz zz 5 iota1 package main import \u0026#34;fmt\u0026#34; const ( a = iota b = iota ) const ( name = \u0026#34;name\u0026#34; c = iota d = iota ) func main() { fmt.Println(a, b, c, d) } Answer Try it 0 1 1 2 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/iota/","summary":" iota package main import \u0026#34;fmt\u0026#34; const ( x = iota _ y z = \u0026#34;zz\u0026#34; k p = iota ) func main() { fmt.Println(x, y, z, k, p) } Answer Try it 0 2 zz zz 5 iota1 package main import \u0026#34;fmt\u0026#34; const ( a = iota b = iota ) const ( name = \u0026#34;name\u0026#34; c = iota d = iota ) func main() { fmt.Println(a, b, c, d) } Answer Try it 0 1 1 2 ","tags":null,"title":"Iota"},{"categories":null,"contents":" json package main import ( \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; ) type AutoGenerated struct { Age int `json:\u0026#34;age\u0026#34;` Name string `json:\u0026#34;name\u0026#34;` Child []int `json:\u0026#34;child\u0026#34;` } func main() { jsonStr1 := `{\u0026#34;age\u0026#34;: 14,\u0026#34;name\u0026#34;: \u0026#34;potter\u0026#34;, \u0026#34;child\u0026#34;:[1,2,3]}` a := AutoGenerated{} json.Unmarshal([]byte(jsonStr1), \u0026amp;a) aa := a.Child fmt.Println(aa) jsonStr2 := `{\u0026#34;age\u0026#34;: 12,\u0026#34;name\u0026#34;: \u0026#34;potter\u0026#34;, \u0026#34;child\u0026#34;:[3,4,5,7,8,9]}` json.Unmarshal([]byte(jsonStr2), \u0026amp;a) fmt.Println(aa) } A. [1 2 3] [1 2 3] B. [1 2 3] [3 4 5] C. [1 2 3] [3 4 5 6 7 8 9] D. [1 2 3] [3 4 5 0 0 0] Answer Try it B json1 package main import ( \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { t := struct { time.Time N int }{ time.Date(2020, 12, 20, 0, 0, 0, 0, time.UTC), 5, } m, _ := json.Marshal(t) fmt.Printf(\u0026#34;%s\u0026#34;, m) } A. {\u0026ldquo;Time\u0026rdquo;:\u0026ldquo;2020-12-20T00:00:00Z\u0026rdquo;,\u0026ldquo;N\u0026rdquo;:5} B. \u0026ldquo;2020-12-20T00:00:00Z\u0026rdquo; C. {\u0026ldquo;N\u0026rdquo;:5} D. E. 其他 Answer Try it B ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/json/","summary":"json package main import ( \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; ) type AutoGenerated struct { Age int `json:\u0026#34;age\u0026#34;` Name string `json:\u0026#34;name\u0026#34;` Child []int `json:\u0026#34;child\u0026#34;` } func main() { jsonStr1 := `{\u0026#34;age\u0026#34;: 14,\u0026#34;name\u0026#34;: \u0026#34;potter\u0026#34;, \u0026#34;child\u0026#34;:[1,2,3]}` a := AutoGenerated{} json.Unmarshal([]byte(jsonStr1), \u0026amp;a) aa := a.Child fmt.Println(aa) jsonStr2 := `{\u0026#34;age\u0026#34;: 12,\u0026#34;name\u0026#34;: \u0026#34;potter\u0026#34;, \u0026#34;child\u0026#34;:[3,4,5,7,8,9]}` json.Unmarshal([]byte(jsonStr2), \u0026amp;a) fmt.Println(aa) } A. [1 2 3] [1 2 3] B. [1 2 3] [3 4 5] C. [1 2 3] [3 4 5 6 7 8 9] D.","tags":null,"title":"JSON"},{"categories":null,"contents":" len package main func main() { var x *struct { s [][32]byte } println(len(x.s[99])) } A. panic B. compilation error C. 32 D. 0 Answer Try it C len1 package main const s = \u0026#34;Go101.org\u0026#34; // len(s) == 9 // 1 \u0026lt;\u0026lt; 9 == 512 // 512 / 128 == 4 var a byte = 1 \u0026lt;\u0026lt; len(s) / 128 var b byte = 1 \u0026lt;\u0026lt; len(s[:]) / 128 func main() { println(a, b) } A: 0 0 B: 0 4 C: 4 0 D: 4 4 Answer Try it C len2 package main var s = \u0026#34;Go101.org\u0026#34; // len(s) == 9 // 1 \u0026lt;\u0026lt; 9 == 512 // 512 / 128 == 4 var a byte = 1 \u0026lt;\u0026lt; len(s) / 128 var b byte = 1 \u0026lt;\u0026lt; len(s[:]) / 128 func main() { println(a, b) } A: 0 0 B: 0 4 C: 4 0 D: 4 4 Answer Try it A ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/len/","summary":"len package main func main() { var x *struct { s [][32]byte } println(len(x.s[99])) } A. panic B. compilation error C. 32 D. 0 Answer Try it C len1 package main const s = \u0026#34;Go101.org\u0026#34; // len(s) == 9 // 1 \u0026lt;\u0026lt; 9 == 512 // 512 / 128 == 4 var a byte = 1 \u0026lt;\u0026lt; len(s) / 128 var b byte = 1 \u0026lt;\u0026lt; len(s[:]) / 128 func main() { println(a, b) } A: 0 0 B: 0 4 C: 4 0 D: 4 4 Answer Try it C len2 package main var s = \u0026#34;Go101.","tags":null,"title":"Len"},{"categories":null,"contents":" map package main import \u0026#34;fmt\u0026#34; type Student struct { Name string } var list map[string]Student func main() { list = make(map[string]Student) student := Student{\u0026#34;Aceld\u0026#34;} list[\u0026#34;student\u0026#34;] = student list[\u0026#34;student\u0026#34;].Name = \u0026#34;LDB\u0026#34; fmt.Println(list[\u0026#34;student\u0026#34;]) } Answer Try it compilation error cannot assign to struct field list[\"student\"].Name in map map1 package main func main() { m := make(map[int]int, 3) x := len(m) m[1] = m[1] y := len(m) println(x, y) } Answer Try it 0 1 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/map/","summary":" map package main import \u0026#34;fmt\u0026#34; type Student struct { Name string } var list map[string]Student func main() { list = make(map[string]Student) student := Student{\u0026#34;Aceld\u0026#34;} list[\u0026#34;student\u0026#34;] = student list[\u0026#34;student\u0026#34;].Name = \u0026#34;LDB\u0026#34; fmt.Println(list[\u0026#34;student\u0026#34;]) } Answer Try it compilation error cannot assign to struct field list[\"student\"].Name in map map1 package main func main() { m := make(map[int]int, 3) x := len(m) m[1] = m[1] y := len(m) println(x, y) } Answer Try it 0 1 ","tags":null,"title":"Map"},{"categories":null,"contents":" print package main import \u0026#34;fmt\u0026#34; type T struct { x int } func (t T) String() string { return \u0026#34;boo\u0026#34; } func main() { t := T{123} fmt.Printf(\u0026#34;%v\\n\u0026#34;, t) fmt.Printf(\u0026#34;%#v\\n\u0026#34;, t) } Answer Try it boo main.T{x:123} print1 package main import ( \u0026#34;fmt\u0026#34; ) func f(a ...int) { fmt.Printf(\u0026#34;%#v\\n\u0026#34;, a) } func main() { f() } Answer Try it []int(nil) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/print/","summary":" print package main import \u0026#34;fmt\u0026#34; type T struct { x int } func (t T) String() string { return \u0026#34;boo\u0026#34; } func main() { t := T{123} fmt.Printf(\u0026#34;%v\\n\u0026#34;, t) fmt.Printf(\u0026#34;%#v\\n\u0026#34;, t) } Answer Try it boo main.T{x:123} print1 package main import ( \u0026#34;fmt\u0026#34; ) func f(a ...int) { fmt.Printf(\u0026#34;%#v\\n\u0026#34;, a) } func main() { f() } Answer Try it []int(nil) ","tags":null,"title":"Print"},{"categories":null,"contents":" race type Stats struct { mutex sync.Mutex counters map[string]int } func (s *Stats) Snapshot() map[string]int { s.mutex.Lock() defer s.mutex.Unlock() return s.counters } func (s *Stats) Add(name string, num int) { s.mutex.Lock() defer s.mutex.Unlock() s.counters[name] = num } Answer func (s *Stats) Snapshot() map[string]int { s.mutex.Lock() defer s.mutex.Unlock() result := make(map[string]int, len(s.counters)) for k, v := range s.counters { result[k] = v } return result } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/race/","summary":" race type Stats struct { mutex sync.Mutex counters map[string]int } func (s *Stats) Snapshot() map[string]int { s.mutex.Lock() defer s.mutex.Unlock() return s.counters } func (s *Stats) Add(name string, num int) { s.mutex.Lock() defer s.mutex.Unlock() s.counters[name] = num } Answer func (s *Stats) Snapshot() map[string]int { s.mutex.Lock() defer s.mutex.Unlock() result := make(map[string]int, len(s.counters)) for k, v := range s.counters { result[k] = v } return result } ","tags":null,"title":"Race"},{"categories":null,"contents":" select package main import \u0026#34;sync\u0026#34; func main() { var wg sync.WaitGroup foo := make(chan int) bar := make(chan int) wg.Add(1) go func() { defer wg.Done() select { case foo \u0026lt;- \u0026lt;-bar: default: println(\u0026#34;default\u0026#34;) } }() wg.Wait() } Answer Try it fatal error: all goroutines are asleep - deadlock! select1 package main import \u0026#34;fmt\u0026#34; func main() { ch1 := make(chan int) ch2 := make(chan int) go func() { ch1 \u0026lt;- 1 }() go func() { select { case \u0026lt;-ch1: case ch2 \u0026lt;- 2: } }() fmt.Println(\u0026lt;-ch2) } A. 1 B. 2 C. No output, program is deadlocked D. No output, program has finished execution. E. else Answer Try it B ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/select/","summary":"select package main import \u0026#34;sync\u0026#34; func main() { var wg sync.WaitGroup foo := make(chan int) bar := make(chan int) wg.Add(1) go func() { defer wg.Done() select { case foo \u0026lt;- \u0026lt;-bar: default: println(\u0026#34;default\u0026#34;) } }() wg.Wait() } Answer Try it fatal error: all goroutines are asleep - deadlock! select1 package main import \u0026#34;fmt\u0026#34; func main() { ch1 := make(chan int) ch2 := make(chan int) go func() { ch1 \u0026lt;- 1 }() go func() { select { case \u0026lt;-ch1: case ch2 \u0026lt;- 2: } }() fmt.","tags":null,"title":"Select"},{"categories":null,"contents":" slice package main import ( \u0026#34;fmt\u0026#34; ) func main() { var s1 []int var s2 = []int{} if __ == nil { fmt.Println(\u0026#34;nil slice\u0026#34;) } if __ != nil { fmt.Println(\u0026#34;empty slice\u0026#34;) } } A. s1, s2 B. s2, s1 C. s1, s1 D. s2, s2 Answer Try it A slice1 package main import ( \u0026#34;fmt\u0026#34; ) func main() { s := [3]int{1, 2, 3} a := s[:0] b := s[:2] c := s[1:2:cap(s)] fmt.Println(len(a), cap(a)) fmt.Println(len(b), cap(b)) fmt.Println(len(c), cap(c)) } Answer Try it 0 3 2 3 1 2 slice2 package main import \u0026#34;fmt\u0026#34; func main() { s1 := []int{1, 2, 3} s2 := s1[1:] s2[1] = 4 fmt.Println(s1) s2 = append(s2, 5, 6, 7) fmt.Println(s1) } Answer Try it [1 2 4] [1 2 4] ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/slice/","summary":"slice package main import ( \u0026#34;fmt\u0026#34; ) func main() { var s1 []int var s2 = []int{} if __ == nil { fmt.Println(\u0026#34;nil slice\u0026#34;) } if __ != nil { fmt.Println(\u0026#34;empty slice\u0026#34;) } } A. s1, s2 B. s2, s1 C. s1, s1 D. s2, s2 Answer Try it A slice1 package main import ( \u0026#34;fmt\u0026#34; ) func main() { s := [3]int{1, 2, 3} a := s[:0] b := s[:2] c := s[1:2:cap(s)] fmt.","tags":null,"title":"Slice"},{"categories":null,"contents":" variable A. p.name B. (\u0026amp;p).name C. (*p).name D. p-\u0026gt;name Answer AC variable1 package main import ( \u0026#34;fmt\u0026#34; ) func main() { var ans float64 = 15 + 25 + 5.2 fmt.Println(ans) } A. 45 B. 45.0 C. 45.2 D. compliation error Answer Try it C variable2 package main import ( \u0026#34;fmt\u0026#34; ) func main() { var ans float64 = 3 / 2 fmt.Println(ans) } A. 1.5 B. 1 C. 0 D. compliation error Answer Try it B variable3 package main func main() { const a int8 = -1 var b int8 = -128 / a println(b) } Answer Try it compliation error -128 / a (constant 128 of type int8) overflows int8 variable4 package main func main() { var a int8 = -1 var b int8 = -128 / a println(b) } Answer Try it -128 variable5 package main import \u0026#34;fmt\u0026#34; type MyInt1 int type MyInt2 = int func main() { var i int =0 var i1 MyInt1 = i var i2 MyInt2 = i fmt.Println(i1, i2) } Answer Try it compilation error cannot use i (variable of type int) as MyInt1 value in variable declaration variable6 package main import \u0026#34;fmt\u0026#34; func main() { const X = 7.0 var x interface{} = X if y, ok := x.(int); ok { fmt.Println(y) } else { fmt.Println(int(y)) } } A. 7 B. 7.0 C. 0 D. compilation error Answer Try it C ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://linzeyan.github.io/notes/go/questions/variable/","summary":"variable A. p.name B. (\u0026amp;p).name C. (*p).name D. p-\u0026gt;name Answer AC variable1 package main import ( \u0026#34;fmt\u0026#34; ) func main() { var ans float64 = 15 + 25 + 5.2 fmt.Println(ans) } A. 45 B. 45.0 C. 45.2 D. compliation error Answer Try it C variable2 package main import ( \u0026#34;fmt\u0026#34; ) func main() { var ans float64 = 3 / 2 fmt.Println(ans) } A. 1.5 B. 1 C. 0 D.","tags":null,"title":"Variable"},{"categories":["Nginx"],"contents":"Record Nginx configuration file and explanation. files structure . ├── geoip.conf ├── nginx.conf ├── sites-available │ ├── default.conf ├── sites-enabled │ ├── default.conf -\u0026gt; ../sites-available/default.conf ├── upstream.conf geoip.conf ## module: ngx_http_geoip2_module ## https://github.com/leev/ngx_http_geoip2_module ## 讀取 GeoIP 資料庫，並進行變數設定 geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb { auto_reload 60m; $geoip2_metadata_country_build metadata build_epoch; ## 自定義 $geoip2_data_country_code 值為 $remote_addr 對應的 ISO 3116 規範的國碼 $geoip2_data_country_code source=$remote_addr country iso_code; ## 自定義 $geoip2_data_country_name 值為對應的英文城市名 $geoip2_data_country_name country names en; } upstream.conf ## module: ngx_http_upstream_module ## 定義 server 組別 upstream to_nodejs1 { ## server address [parameters]; 定義 server ## parameters: ## weight=number 定義權重，預設為 1 ## max_fails=number 設定到 upstream server 的最大重試次數，預設為 1 ## fail_timeout=time 設定到達 max_fails 次數之後，暫停向此 upstream server 傳送請求的時間，預設為 10 秒 ## backup 標記此 upstream server 為備用，當其他 upstream server 不可用時，此 upstream server 可接受請求 ## down 標記此 upstream server 為不可用 server 10.7.0.12:9000 max_fails=3 fail_timeout=5s; server 10.7.0.12:9001 max_fails=3 fail_timeout=5s backup; } upstream to_nodejs2 { server 10.7.0.12:9002 max_fails=3 fail_timeout=5s; server 10.7.0.12:9003 max_fails=3 fail_timeout=5s backup; } upstream to_nodejs9005 { server 10.7.0.12:9005 max_fails=3 fail_timeout=5s; } ## module: ngx_http_map_module ## map string $variable { ... } 建立一個新的變數 map $arg_agent $game_api { ## $arg_agent 請求中 agent 的值(https://abc.com/?agent=123) ## agent=123, $game_api 的值為 to_nodejs95 123 to_nodejs95; ## agent 結尾是 1, 2, 3, 或是 4, $game_api 的值為 to_nodejs1 ~*1$ to_nodejs1; ~*2$ to_nodejs1; ~*3$ to_nodejs1; ~*4$ to_nodejs1; ## 若 agent 不符合上開規則，預設 $game_api 的值為 to_nodejs2 default to_nodejs2; } default.conf ## module: ngx_http_limit_req_module ## 限制請求處理 ## limit_req_zone key zone=name:size rate=rate [sync]; 定義限制請求的規則 limit_req_zone $binary_remote_addr$server_name zone=websocket:10m rate=1r/m; ## limit_req_status code; 設定被拒絕連線的 HTTP 狀態碼，預設為 503 limit_req_status 502; ## 設定虛擬主機 server { ## listen port [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]]; ## 設定監聽的埠口，預設為 *:80 ## 下方設定為監聽 80 port，且為預設的虛擬主機 listen 80 default_server; ## server_name name ...; 設定虛擬主機名，可使用正則表示式，預設為 \u0026#34;\u0026#34; server_name _; access_log logs/default/default.log json; error_log logs/default/default.error.log warn; ## module: ngx_http_access_module ## allow address | CIDR | unix: | all; 允許 IP 訪問 allow 1.1.1.1; ## deny address | CIDR | unix: | all; 禁止 IP 訪問 deny 12.34.56.78; ## 設定請求訪問的根資料夾 root /usr/share/nginx/html; ## limit_req zone=name [burst=number] [nodelay | delay=number]; 設定限制請求的規則 zone limit_req zone=websocket nodelay; ## limit_req_log_level info | notice | warn | error; 設定被拒絕連線的請求日誌等級，預設為 error limit_req_log_level warn; ## location [ = | ~ | ~* | ^~ ] uri { ... } ## location @name { ... } 依據請求的 URI 配置 location / { default_type application/json; ## 返回 HTTP 狀態碼 200，並包含字串 return 200 \u0026#39;{\u0026#34;Code\u0026#34;: \u0026#34;$status\u0026#34;, \u0026#34;IP\u0026#34;: \u0026#34;$remote_addr\u0026#34;}\u0026#39;; } } server { ## 下方設定為監聽 443 port，且為預設的虛擬主機，所有連線都使用 SSL listen 443 default_server ssl; server_name _; access_log logs/default/default.log json; error_log logs/default/default.error.log warn; ## module: ngx_http_ssl_module ## 設定 PEM 格式的證書 ssl_certificate /etc/ssl/hddv1.com.crt; ## 設定 PEM 格式的密鑰 ssl_certificate_key /etc/ssl/hddv1.com.key; ## 設定 SSL 版本，預設為 TLSv1 TLSv1.1 TLSv1.2 ssl_protocols TLSv1.2 TLSv1.3; ## 設定啟用的加密方法，預設為 HIGH:!aNULL:!MD5 ssl_ciphers \u0026#34;EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:HIGH:!RC2:!RC4:!aNULL:!eNULL:!LOW:!IDEA:!DES:!TDES:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!EXPORT:!ANON\u0026#34;; ## 為 DHE 加密法指定帶有 DH 參數的文件 ssl_dhparam /etc/ssl/dhparams.pem; ## 是否優先使用 server 的加密法，預設為 off ssl_prefer_server_ciphers on; ## ssl_session_cache off | none | [builtin[:size]] [shared:name:size]; ## 設定緩存及大小，預設為 none ssl_session_cache shared:SSL:1m; ## 設定 session 可重複使用的時間，預設為 5 分鐘 ssl_session_timeout 5m; add_header X-Frame-Options \u0026#34;SAMEORIGIN\u0026#34;; add_header X-XSS-Protection \u0026#34;1; mode=block\u0026#34;; add_header Strict-Transport-Security \u0026#34;max-age=31536000; includeSubdomains; preload\u0026#34;; root /usr/share/nginx/html; limit_req zone=websocket nodelay; limit_req_log_level warn; default_type application/json; location / { default_type application/json; return 200 \u0026#39;{\u0026#34;Code\u0026#34;: \u0026#34;$status\u0026#34;, \u0026#34;IP\u0026#34;: \u0026#34;$remote_addr\u0026#34;}\u0026#39;; } } nginx.conf ## module: ngx_core_module ## worker_processes number | auto; 啟動 Nginx worker 程序數量, 設定 auto 即和 CPU 的數量相等 worker_processes auto; ## worker_rlimit_nofile number; Nginx worker 程序最大打開文件數，預設為系統 RLIMIT_NOFILE worker_rlimit_nofile 131072; ## worker_shutdown_timeout time; 設定關閉超時時間，當執行 reload 或是其他相關指令，超過 time 時間之後，Nginx 會主動關閉所有受影響的 worker worker_shutdown_timeout 60; ## error_log file [level]; 設定錯誤日誌寫入位置 ## debug, info, notice, warn, error, crit, alert, emerg error_log logs/error.log warn; ## pid file; 主程序 ID 文件位置 pid logs/nginx.pid; ## module: ngx_core_module ## 設定連線處理相關 events { ## worker_connections number; 單個 Nginx worker 程序的最大並發連接數，預設為 512，需要小於 worker_rlimit_nofile ## 最大連接數 = worker_connections * worker_processes worker_connections 102400; ## accept_mutex on | off; 預設為 off ## 只有一個新連線進入，如果設定為 on，只有一個 worker 會接受連線，其餘持續休眠 ## 如果設定為 off，所有 worker 會被喚醒，只有一個 worker 會接受連線，其餘重新休眠 ## 業務上使用 TCP 長連線、流量大，off 的效能以及 QPS 表現較佳 accept_mutex off; ## multi_accept on | off; 是否同時接受所有的請求，預設為 off multi_accept on; } ## module: ngx_http_core_module ## 設定 HTTP server 相關 http { ## module: ngx_core_module ## include file | mask; 使用文件中的設定 ## 下方為設定 MIME 類型,類型由 mime.type 文件定義 include mime.types; ## default_type mime-type; 定義默認 MIME 類型，預設為 text/plain default_type application/octet-stream; ## server_names_hash_max_size size; 設定 server_name 的 hash 表最大值，預設為 512 kb server_names_hash_max_size 2048; ## 設定 server_name 的 hash 表的大小，用於快速找到對應的 server_name，預設值取決於 CPU 的 L1 cache server_names_hash_bucket_size 256; ## server_tokens on | off | build | string; 是否在 Nginx 錯誤頁面顯示 Nginx 版本，預設為 on server_tokens off; ## 是否在錯誤日誌記錄 404 log_not_found off; ## 是否啟用 sendfile() 提高文件傳輸效率，預設為 off sendfile on; ## 文件是否使用完整封包發送，預設為 off tcp_nopush on; ## 數據是否儘快傳送，預設為 on tcp_nodelay on; ## 設定長連線持續秒數，超過時間 Nginx 會主動關閉連線，預設為 75 keepalive_timeout 70; ## client_max_body_size size; 設定請求允許最大的 body 大小 client_max_body_size 64M; ## module: ngx_http_gzip_module ## 是否啟用 gzip 壓縮，預設為 off gzip on; ## 設定要壓縮的 Content-Length 最小值，預設為 20 gzip_min_length 1k; ## 設定壓縮緩衝大小，預設為一頁記憶體 ## gzip_buffers number size; gzip_buffers 4 32k; ## 設定壓縮等級，範圍 1 ~ 9，預設為 1 gzip_comp_level 7; ## 設定要壓縮的 MIME 類型，預設為 text/html gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/json; ## 是否在 HTTP response header 增加 Vary: Accept-Encoding，預設為 off gzip_vary on; ## 針對特定 User-Agent 禁用壓縮 ## 下方為設定禁用 IE 6 gzip_disable \u0026#34;MSIE [1-6]\\.\u0026#34;; ## resolver address ... [valid=time] [ipv6=on|off] [status_zone=zone]; 使用指定的 NS 解析 server_name, upstream server 等 resolver 114.114.114.114 8.8.8.8 1.1.1.1; ## module: ngx_http_headers_module ## add_header name value [always]; 在 HTTP response header 增加欄位 ## 下方為設定允許跨域 add_header Access-Control-Allow-Origin *; add_header Access-Control-Allow-Headers DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type; add_header Access-Control-Allow-Methods GET,POST,OPTIONS; add_header Access-Control-Expose-Headers \u0026#39;WWW-Authenticate,Server-Authorization,User-Identity-Token\u0026#39;; ## module: ngx_http_realip_module ## set_real_ip_from address | CIDR | unix:; 設定信任的可被替代的伺服器 IP，如反向代理伺服器 set_real_ip_from 10.0.0.0/8; set_real_ip_from 172.16.0.0/12; set_real_ip_from 192.168.0.0/16; ## real_ip_header field | X-Real-IP | X-Forwarded-For | proxy_protocol; 定義使用哪個標頭取代獲取到的 client IP，預設為 X-Real-IP real_ip_header X-Forwarded-For; ## 將 real_ip_header 設定的標頭中，「最後一個非信任伺服器 IP」或是「最後一個 IP」當成真實 IP，預設為 off real_ip_recursive on; ## module: ngx_http_log_module ## log_format name [escape=default|json|none] string ...; 設定日誌格式 log_format json escape=json \u0026#39;{\u0026#34;@timestamp\u0026#34;:\u0026#34;$time_iso8601\u0026#34;,\u0026#39; \u0026#39;\u0026#34;@source\u0026#34;:\u0026#34;$server_addr\u0026#34;,\u0026#39; \u0026#39;\u0026#34;ip\u0026#34;:\u0026#34;$http_x_forwarded_for\u0026#34;,\u0026#39; \u0026#39;\u0026#34;client\u0026#34;:\u0026#34;$remote_addr\u0026#34;,\u0026#39; \u0026#39;\u0026#34;request_method\u0026#34;:\u0026#34;$request_method\u0026#34;,\u0026#39; \u0026#39;\u0026#34;scheme\u0026#34;:\u0026#34;$scheme\u0026#34;,\u0026#39; \u0026#39;\u0026#34;domain\u0026#34;:\u0026#34;$server_name\u0026#34;,\u0026#39; \u0026#39;\u0026#34;client_host\u0026#34;:\u0026#34;$host\u0026#34;,\u0026#39; \u0026#39;\u0026#34;referer\u0026#34;:\u0026#34;$http_referer\u0026#34;,\u0026#39; \u0026#39;\u0026#34;request\u0026#34;:\u0026#34;$request_uri\u0026#34;,\u0026#39; \u0026#39;\u0026#34;args\u0026#34;:\u0026#34;$args\u0026#34;,\u0026#39; \u0026#39;\u0026#34;sent_bytes\u0026#34;:$body_bytes_sent,\u0026#39; \u0026#39;\u0026#34;status\u0026#34;:$status,\u0026#39; \u0026#39;\u0026#34;responsetime\u0026#34;:$request_time,\u0026#39; \u0026#39;\u0026#34;upstreamtime\u0026#34;:\u0026#34;$upstream_response_time\u0026#34;,\u0026#39; \u0026#39;\u0026#34;upstreamaddr\u0026#34;:\u0026#34;$upstream_addr\u0026#34;,\u0026#39; \u0026#39;\u0026#34;http_user_agent\u0026#34;:\u0026#34;$http_user_agent\u0026#34;,\u0026#39; \u0026#39;\u0026#34;Country\u0026#34;:\u0026#34;$geoip2_data_country_name\u0026#34;,\u0026#39; \u0026#39;\u0026#34;State\u0026#34;:\u0026#34;$geoip2_data_state_name\u0026#34;,\u0026#39; \u0026#39;\u0026#34;City\u0026#34;:\u0026#34;$geoip2_data_city_name\u0026#34;,\u0026#39; \u0026#39;\u0026#34;https\u0026#34;:\u0026#34;$https\u0026#34;\u0026#39; \u0026#39;}\u0026#39;; log_format main \u0026#39;$remote_addr - $remote_user [$time_local] \u0026#34;$request\u0026#34; \u0026#39; \u0026#39;$status $body_bytes_sent \u0026#34;$http_referer\u0026#34; \u0026#39; \u0026#39;\u0026#34;$http_user_agent\u0026#34; \u0026#34;$http_x_forwarded_for\u0026#34;\u0026#39;; ## access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]]; 設定日誌寫入位置以及使用的日誌名稱 ## access_log off; 不紀錄日誌 access_log logs/access.log json; } ","date":"November 19, 2021","hero":"/posts/nginx/nginx.jpeg","permalink":"https://linzeyan.github.io/posts/nginx/","summary":"Record Nginx configuration file and explanation. files structure . ├── geoip.conf ├── nginx.conf ├── sites-available │ ├── default.conf ├── sites-enabled │ ├── default.conf -\u0026gt; ../sites-available/default.conf ├── upstream.conf geoip.conf ## module: ngx_http_geoip2_module ## https://github.com/leev/ngx_http_geoip2_module ## 讀取 GeoIP 資料庫，並進行變數設定 geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb { auto_reload 60m; $geoip2_metadata_country_build metadata build_epoch; ## 自定義 $geoip2_data_country_code 值為 $remote_addr 對應的 ISO 3116 規範的國碼 $geoip2_data_country_code source=$remote_addr country iso_code; ## 自定義 $geoip2_data_country_name 值為對應的英文城市名 $geoip2_data_country_name country names en; } upstream.conf ## module: ngx_http_upstream_module ## 定義 server 組別 upstream to_nodejs1 { ## server address [parameters]; 定義 server ## parameters: ## weight=number 定義權重，預設為 1 ## max_fails=number 設定到 upstream server 的最大重試次數，預設為 1 ## fail_timeout=time 設定到達 max_fails 次數之後，暫停向此 upstream server 傳送請求的時間，預設為 10 秒 ## backup 標記此 upstream server 為備用，當其他 upstream server 不可用時，此 upstream server 可接受請求 ## down 標記此 upstream server 為不可用 server 10.","tags":["Nginx","configs"],"title":"Nginx notes"},{"categories":["Gitlab"],"contents":"Gitlab CI Concept Gitlab DevOps GitOps Workflow code push -\u0026gt; pipeline -\u0026gt; stage -\u0026gt; job Design plan -\u0026gt; code -\u0026gt; build -\u0026gt; test -\u0026gt; release -\u0026gt; deploy -\u0026gt; operate -\u0026gt; monitor -\u0026gt; plan Runner Executors Shell VirtualBox Docker Docker Machine Kubernetes Else\u0026hellip; References Gitlab CI/CD Gitlab Runner .gitlab-ci.yaml Runner Register gitlab-runner register\nAfter register concurrent = 1 check_interval = 0 [session_server] session_timeout = 1800 [[runners]] name = \u0026#34;public-shell\u0026#34; url = \u0026#34;https://gitlab.go2cloudten.com/\u0026#34; token = \u0026#34;-mdH9OAOzG5yPsf_AVnW\u0026#34; executor = \u0026#34;shell\u0026#34; [[runners]] name = \u0026#34;public-docker\u0026#34; url = \u0026#34;https://gitlab.go2cloudten.com/\u0026#34; token = \u0026#34;AcEGPPKTS1uuQ_A_qpWy\u0026#34; executor = \u0026#34;docker\u0026#34; [runners.docker] dns = [\u0026#34;192.168.185.5\u0026#34;, \u0026#34;192.168.185.6\u0026#34;] tls_verify = false image = \u0026#34;registry.go2cloudten.com/it/office_sop/node:12.13.0\u0026#34; privileged = true disable_entrypoint_overwrite = false oom_kill_disable = false disable_cache = false shm_size = 0 pull_policy = \u0026#34;if-not-present\u0026#34; volumes = [\u0026#34;/cache\u0026#34;] Repository .gitlab-ci.yaml stages: - domain check-icp: stage: domain image: registry.go2cloudten.com/it/office_sop/icp tags: - docker script: - domains=$(awk -F \u0026#39;|\u0026#39; \u0026#39;{if($6 ~ \u0026#34;Y\u0026#34; \u0026amp;\u0026amp; ($7 ~ \u0026#34;West\u0026#34; || $7 ~ \u0026#34;Yuqu\u0026#34;)) print $3}\u0026#39; domains-info.md | sed \u0026#39;s/ //g\u0026#39; | sort | uniq) - if [[ \u0026#34;${domains}\u0026#34; == \u0026#34;\u0026#34; ]]; then telegram.sh \u0026#39;There is no domain in list\u0026#39; ; else telegram.sh \u0026#39;Start checking ICP.\u0026#39; ; fi - for i in ${domains}; do result=$(checkicp ${i}); if [[ \u0026#34;${result}\u0026#34; == \u0026#34;未备案\u0026#34; ]];then telegram.sh \u0026#34;${i} 未备案\u0026#34;; sleep 1 ;fi;done - telegram.sh \u0026#39;ICP check completed.\u0026#39; only: - schedules ","date":"September 24, 2021","hero":"/posts/gitlab/gitlab.png","permalink":"https://linzeyan.github.io/posts/gitlab/","summary":"Gitlab CI Concept Gitlab DevOps GitOps Workflow code push -\u0026gt; pipeline -\u0026gt; stage -\u0026gt; job Design plan -\u0026gt; code -\u0026gt; build -\u0026gt; test -\u0026gt; release -\u0026gt; deploy -\u0026gt; operate -\u0026gt; monitor -\u0026gt; plan Runner Executors Shell VirtualBox Docker Docker Machine Kubernetes Else\u0026hellip; References Gitlab CI/CD Gitlab Runner .gitlab-ci.yaml Runner Register gitlab-runner register\nAfter register concurrent = 1 check_interval = 0 [session_server] session_timeout = 1800 [[runners]] name = \u0026#34;public-shell\u0026#34; url = \u0026#34;https://gitlab.","tags":["Gitlab","introduction","slides","ci"],"title":"Gitlab-CI Introduction"},{"categories":["Docker"],"contents":"Docker Concept VM vs Container VM - Base on OS Container - Base on Application (Linux Kernel: Namespace and Cgroup) Client to Server Docker daemon - containerd, docker-containerd-shim, docker-runc Docker client - cli command docker cli -\u0026gt; docker daemon -\u0026gt; containerd -\u0026gt; runc -\u0026gt; namespace \u0026amp; cgroup Image Snapshots Container Read-Only processes on image Hub / Registry Store images References Docker —— 從入門到實踐 docker docs Docker commands Dockerfile ARG dist=\u0026#34;/tmp/password\u0026#34; ARG projectDir=\u0026#34;/password\u0026#34; FROM golang:1.16-alpine3.14 AS builder RUN apk add build-base upx ARG dist ARG projectDir WORKDIR ${projectDir} COPY . . RUN go build -trimpath -o main cmd/main.go RUN upx -9 -o ${dist} main FROM scratch ARG dist ENV TZ=Asia/Taipei COPY --from=builder ${dist} /usr/local/bin/password Dockerfile1 FROM alpine CMD [\u0026#34;nc\u0026#34;,\u0026#34;-l\u0026#34;,\u0026#34;12345\u0026#34;] Dockerfile2 FROM alpine CMD [\u0026#34;echo\u0026#34;,\u0026#34;DOCKER\u0026#34;] docker build command docker build . -t program docker build . -f Dockerfile -t test_mysql docker build . -t hello:v1.1 --build-arg dist=/tmp/hello --build-arg projectDir=/hello docker build . docker/status echo -e \u0026#34;${GREEN}Before build${RESET}\u0026#34; docker image ls docker build . -f docker/Dockerfile1 -t test1 docker build . -f docker/Dockerfile2 -t test2 docker image . docker/status echo -e \u0026#34;${GREEN}After build${RESET}\u0026#34; docker image ls docker run AND rm . docker/status echo -e \u0026#34;${GREEN}Run container1${RESET}\u0026#34; docker run -d --name container1 test1 echo -e \u0026#34;${GREEN}Run container2${RESET}\u0026#34; docker run -d --name container2 test2 echo -e \u0026#34;${GREEN}List alive containers${RESET}\u0026#34; docker ps echo -e \u0026#34;${GREEN}List all containers${RESET}\u0026#34; docker ps -a echo -e \u0026#34;${GREEN}Remove alive container${RESET}\u0026#34; docker rm -f container1 echo -e \u0026#34;${GREEN}List all containers${RESET}\u0026#34; docker ps -a echo -e \u0026#34;${GREEN}Remove exit container${RESET}\u0026#34; docker rm container2 echo -e \u0026#34;${GREEN}List all containers${RESET}\u0026#34; docker ps -a docker pull AND rmi . docker/status echo -e \u0026#34;${GREEN}List all image${RESET}\u0026#34; docker image ls echo -e \u0026#34;${GREEN}Pull alpine image${RESET}\u0026#34; docker pull alpine echo -e \u0026#34;${GREEN}List all image${RESET}\u0026#34; docker image ls docker rmi . docker/status echo -e \u0026#34;${GREEN}Remove alpine image${RESET}\u0026#34; docker rmi alpine echo -e \u0026#34;${GREEN}List all image${RESET}\u0026#34; docker image ls prune docker system prune -f --volumes docker history . docker/status echo -e \u0026#34;${GREEN}History of test1${RESET}\u0026#34; docker history test1 echo -e \u0026#34;${GREEN}History of mysql:8${RESET}\u0026#34; docker history mysql:8 Docker remote Edit service file # /lib/systemd/system/docker.service ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0:2375 Restart service systemctl daemon-reload systemctl restart docker Specify DOCKER_HOST . docker/status echo -e \u0026#34;${GREEN}List images on 192.168.185.9${RESET}\u0026#34; DOCKER_HOST=192.168.185.9:2375 docker images Docker-compose version: \u0026#39;3\u0026#39; services: svn: image: zeyanlin/svn environment: - LDAP_HOSTS=${LDAP_HOSTS} - LDAP_BASE_DN=${LDAP_BASE_DN} - LDAP_BIND_DN=${LDAP_BIND_DN} - LDAP_ADMIN_PASS=${LDAP_ADMIN_PASS} ports: - 8000:80 - 3690:3690 depends_on: - ldap ldap: image: zeyanlin/openldap environment: - LDAP_DOMAIN=${LDAP_DOMAIN} - LDAP_ADMIN_PASS=${LDAP_ADMIN_PASS} ports: - 389:389 - 636:636 php: image: zeyanlin/phpldapadmin environment: - LDAP_HOSTS=${LDAP_HOSTS} ports: - 80:80 depends_on: - ldap Env LDAP_HOSTS=ldap LDAP_DOMAIN=\u0026#34;knowhow.fun\u0026#34; LDAP_BASE_DN=\u0026#34;dc=knowhow,dc=fun\u0026#34; LDAP_BIND_DN=\u0026#34;cn=admin\u0026#34; LDAP_ADMIN_PASS=\u0026#34;123qwe\u0026#34; ","date":"September 17, 2021","hero":"/posts/docker/docker.jpeg","permalink":"https://linzeyan.github.io/posts/docker/","summary":"Docker Concept VM vs Container VM - Base on OS Container - Base on Application (Linux Kernel: Namespace and Cgroup) Client to Server Docker daemon - containerd, docker-containerd-shim, docker-runc Docker client - cli command docker cli -\u0026gt; docker daemon -\u0026gt; containerd -\u0026gt; runc -\u0026gt; namespace \u0026amp; cgroup Image Snapshots Container Read-Only processes on image Hub / Registry Store images References Docker —— 從入門到實踐 docker docs Docker commands Dockerfile ARG dist=\u0026#34;/tmp/password\u0026#34; ARG projectDir=\u0026#34;/password\u0026#34; FROM golang:1.","tags":["Docker","introduction","slides"],"title":"Docker Introduction"},{"categories":["Ansible"],"contents":"Getting to know Ansible. Outline Introduction Install Common modules Folder structure Conclusion Introduction 安裝部署工具、設定管理工具等\n同類型工具：Chef、Puppet、SaltStack\n不需要 Agent、透過 ssh\nLinux 有 python 即可 ( ssh port )\nWin 啟用 winrm 即可 ( 5986 port )\nhttps://docs.ansible.com/ansible/latest/user_guide/windows_winrm.html#inventory-options 資料夾結構簡單易懂、官方文件豐富易懂、模組多支援設備多、易撰寫\nInstall pip install ansible\npip3 install ansible yum install ansible\napt-get install ansible\napk add ansible\nCommon modules ping\nshell / command\nfile\nyum\nsystemd / service\ntemplate / copy\ndebug\nCommon modules - ping Common modules - shell / command Common modules - file Common modules - yum Common modules - systemd / service Common modules - template / copy Common modules - debug / register Folder structure Conclusion 選擇適合的 ansible ad-hoc ansible gitlab -m ping ansible gitlab -m shell -a 'rm -rf /' playbook role collection shell script python script others ","date":"September 26, 2020","hero":"/posts/ansible/ansible.png","permalink":"https://linzeyan.github.io/posts/ansible/","summary":"Getting to know Ansible. Outline Introduction Install Common modules Folder structure Conclusion Introduction 安裝部署工具、設定管理工具等\n同類型工具：Chef、Puppet、SaltStack\n不需要 Agent、透過 ssh\nLinux 有 python 即可 ( ssh port )\nWin 啟用 winrm 即可 ( 5986 port )\nhttps://docs.ansible.com/ansible/latest/user_guide/windows_winrm.html#inventory-options 資料夾結構簡單易懂、官方文件豐富易懂、模組多支援設備多、易撰寫\nInstall pip install ansible\npip3 install ansible yum install ansible\napt-get install ansible\napk add ansible\nCommon modules ping\nshell / command\nfile\nyum\nsystemd / service\ntemplate / copy\ndebug\nCommon modules - ping Common modules - shell / command Common modules - file Common modules - yum Common modules - systemd / service Common modules - template / copy Common modules - debug / register Folder structure Conclusion 選擇適合的 ansible ad-hoc ansible gitlab -m ping ansible gitlab -m shell -a 'rm -rf /' playbook role collection shell script python script others ","tags":["Ansible","introduction","slides"],"title":"Ansible Introduction"}]