stages:
  - lint
  - test
  - build
  - deploy

cache:
  paths:
    - node_modules/

variables:
  TEMPLATE_DOCKER_API_PORT: 3333
  TEMPLATE_STATIC_DIR: dist
  TEMPLATE_S3_BUCKET_NAME: template_bucket
  TEMPLATE_SERVICE_NAME: template_service
  TEMPLATE_NODE_VERSION: 20

linter:
  stage: lint
  image:
    name: node:${TEMPLATE_NODE_VERSION}
    pull_policy: if-not-present
  tags:
    - docker
  script:
    - npm install
    - npm run lint
    - npm run lint:style
  allow_failure: true

tester:
  stage: test
  image:
    name: node:${TEMPLATE_NODE_VERSION}
    pull_policy: if-not-present
  tags:
    - docker
  script:
    - npm install
    - npm run test
  allow_failure: false

builder:
  stage: build
  image:
    name: node:${TEMPLATE_NODE_VERSION}
    pull_policy: if-not-present
  tags:
    - docker
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - ${TEMPLATE_STATIC_DIR}/
  only:
    - main
    - master

releaser:
  stage: deploy
  image:
    name: awscli
    pull_policy: if-not-present
  tags:
    - docker
  needs:
    - job: builder
      artifacts: true
  script:
    - |
      case "${stage}" in
        dev|qa)
          TEMPLATE_S3_BUCKET_NAME=template_bucket_${stage}
          ;;
        *)
          echo 'Please specify ${stage}'
          exit 11
      esac
    - aws s3 sync ${TEMPLATE_STATIC_DIR} s3://${TEMPLATE_S3_BUCKET_NAME}/${TEMPLATE_SERVICE_NAME} --acl public-read --delete
  only:
    - main
    - master
  when: manual
