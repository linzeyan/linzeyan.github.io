<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Ricky</title><link>https://linzeyan.github.io/notes/docs/</link><description>Recent content in Docs on Ricky</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://linzeyan.github.io/notes/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloudflare docs</title><link>https://linzeyan.github.io/notes/docs/cloudflare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/cloudflare/</guid><description>Setting CloudFlare Worker for CORS addEventListener(&amp;#34;fetch&amp;#34;, (event) =&amp;gt; { event.respondWith(handleRequest(event.request)); }); async function handleRequest(request) { let response = await fetch(request); response = new Response(response.body, response); response.headers.set( &amp;#34;Access-Control-Allow-Origin&amp;#34;, &amp;#34;frontend-h5.shyc883.com&amp;#34; ); response.headers.set(&amp;#34;Access-Control-Allow-Methods&amp;#34;, &amp;#34;GET, OPTIONS, POST&amp;#34;); response.headers.set( &amp;#34;Access-Control-Allow-Headers&amp;#34;, &amp;#34;Content-Type, Authorization&amp;#34; ); response.headers.set(&amp;#34;Access-Control-Allow-Credentials&amp;#34;, true); return response; } Terraform_create_record terraform { required_providers { cloudflare = { source = &amp;#34;cloudflare/cloudflare&amp;#34; version = &amp;#34;~&amp;gt; 2.0&amp;#34; } } } provider &amp;#34;cloudflare&amp;#34; { email = &amp;#34;cloudflare@gmail.com&amp;#34; api_key = &amp;#34;1488ed0d2082ed36c010b773431fd9dcacde1&amp;#34; account_id = &amp;#34;06ae012a1ba907df24a220cd14a4fa8b&amp;#34; } resource &amp;#34;cloudflare_record&amp;#34; &amp;#34;gitlab&amp;#34; { zone_id = &amp;#34;92c6d5010fbacab27d464f4d79c11fce&amp;#34; name = &amp;#34;gitlab&amp;#34; value = &amp;#34;192.</description></item><item><title>Diagrams</title><link>https://linzeyan.github.io/notes/docs/diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/diagrams/</guid><description> Diagrams https://diagrams.mingrammer.com/docs/getting-started/installation</description></item><item><title>Docker docs</title><link>https://linzeyan.github.io/notes/docs/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/docker/</guid><description>docker-compose cAdvisor docker-compose.yaml prometheus.yaml Elasticsearch docker-compose.yaml local dev docker-compose.yaml NodeJS docker-compose.yaml rstudio docker-compose.yaml rsyncd docker-compose.yaml rsyncd.conf rsyncd.secrets rsync -auz --password-file=/tmp/pass dist user@hostip::myshare Dockerfile awscli Dockerfile buildx Dockerfile docker buildx build --push --platform linux/arm64,linux/amd64 -t zeyanlin/app . dind Dockerfile golang Dockerfile docker build --secret id=mysecret,src=id_rsa -t app . goproxy Dockerfile docker buildx build -f goproxy/Dockerfile --platform linux/amd64,linux/arm64 -t zeyanlin/goproxy:latest --push . Gitlab-ci Dockerfile telegram.bash nginx Dockerfile docker-compose.yml nginx.conf rstudio Dockerfile pkg.</description></item><item><title>Gitlab docs</title><link>https://linzeyan.github.io/notes/docs/gitlab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/gitlab/</guid><description>add member by project Admin Area -&amp;gt; Settings -&amp;gt; General -&amp;gt; LDAP settings -&amp;gt; Lock memberships to LDAP synchronization -&amp;gt; Cancel backup cronjob # Backup Gitlab configs 1 0 * * * /usr/bin/tar -zcf /var/opt/gitlab/backups/`date +%Y_%m_%d`_gitlab_config.tar.gz /etc/gitlab &amp;amp;&amp;gt; /tmp/backup.log # Backup Gitlab data 1 1 * * * /usr/bin/gitlab-backup create STRATEGY=copy BACKUP=`date +%Y_%m_%d` &amp;amp;&amp;gt;&amp;gt; /tmp/backup.log # Rotate 0 2 * * * /usr/bin/rm -f `find /data/backups/ -name &amp;#34;*.tar*&amp;#34; -mtime +15` gitlab-ci.</description></item><item><title>Linux docs</title><link>https://linzeyan.github.io/notes/docs/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/linux/</guid><description>docker.service ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --bip 10.255.0.1/16 --containerd=/run/containerd/containerd.sock --insecure-registry hub.srjob.co:8888 --insecure-registry registry.knowhow.fun gd.service [Unit] Description=Fetch DNS After=network.target After=mysql.service [Service] WorkingDirectory=/data/dns ExecStart=/data/dns/gd -o hourly ExecReload=/bin/kill -s HUP $MAINPID Restart=always [Install] WantedBy=multi-user.target openresty.service [Unit] Description=The OpenResty Application Platform After=syslog.target network-online.target remote-fs.target nss-lookup.target Wants=network-online.target [Service] Type=forking WorkingDirectory=/data/config/nginx PIDFile=/data/config/nginx/logs/nginx.pid ExecStartPre=/usr/bin/chown -R root:root /data/nginx ExecStartPre=/usr/bin/rm -f /data/nginx/logs/nginx.pid ExecStartPre=/usr/local/openresty/nginx/sbin/nginx -p /data/nginx -t ExecStart=/usr/local/openresty/nginx/sbin/nginx -p /data/nginx ExecReload=/bin/kill -s HUP $MAINPID ExecStop=-/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /data/nginx/logs/nginx.</description></item><item><title>mermaid notes</title><link>https://linzeyan.github.io/notes/docs/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/mermaid/</guid><description>details 看我 你看不到我 看不到我 class classDiagram Class01 &amp;lt;|-- AveryLongClass : Cool Class03 _-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --&amp;gt; C2 : Where am i? Class09 --_ C3 Class09 --|&amp;gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 &amp;lt;--&amp;gt; C2: Cool label classDiagram flow-link flowchart LR A --o B B --x C D o--o E E &amp;lt;--&amp;gt; F F x--x G flowchart flow-link1 code flowchart flow-shapes graph LR id1[方框] id2(帶有圓角的方框) id3([體育場形狀]) id4[[子例程]] id5[(圓柱狀)] id6((圓形)) id7&amp;gt;非對稱形狀] id8{菱形} id9{{六角形}} id10[/平行四邊形 1/] id11[\平行四邊形 2\] id12[/梯形 1\] id13[\梯形 2/] id14(((雙圓))) flowchart flow-subgraphs flowchart TD c1--&amp;gt;a2 subgraph one a1--&amp;gt;a2 end subgraph &amp;#34;`**two**`&amp;#34; b1--&amp;gt;b2 end subgraph three c1--&amp;gt;c2 end flowchart gantt gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d gantt git gitGraph commit commit branch develop checkout develop commit commit checkout main merge develop commit commit git er erDiagram CUSTOMER }|.</description></item><item><title>Network docs</title><link>https://linzeyan.github.io/notes/docs/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/network/</guid><description>Synology Active Backup for Bussiness backup task failed Due to IP change last week Firewall policy create NAS_to_ESXi。 虛擬機器 -&amp;gt; 任務清單 -&amp;gt; 刪除任務。 虛擬機器 -&amp;gt; VMware vSphere -&amp;gt; 管理 Hypervisor -&amp;gt; 刪除舊的 IP，新增新的 IP。 Set LACP for Synology NAS and NETGEAR switch NETGEAR Switching -&amp;gt; LAG -&amp;gt; LAG Configuration -&amp;gt; ch1 -&amp;gt; 41、42 -&amp;gt; Apply。 ch1 -&amp;gt; Description: NAS、LAG Type:LACP -&amp;gt; Apply。 Switching -&amp;gt; VLAN -&amp;gt; Port PVID Configuration -&amp;gt; g41、g42 PVID:99、VLAN Member:10-14,17-23,99,101、VLAN Tag:10-14,17-23,99,101 -&amp;gt; Apply。 Synology 控制台 -&amp;gt; 網路 -&amp;gt; 網路介面 -&amp;gt; 新增 Bond。 Set NAT in FortiGate 1.</description></item><item><title>Nginx docs</title><link>https://linzeyan.github.io/notes/docs/nginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/nginx/</guid><description>map # map map $remote_addr $limit_key { 35.229.201.209 &amp;#34;&amp;#34;; default $binary_remote_addr; } # wss.conf limit_req_zone $limit_key zone=websocket:10m rate=20r/s; limit_req_status 499; server { location = / { limit_req zone=websocket nodelay; limit_req_log_level warn; } } rewrite 1 # https://localhost/img/nginx.svg can access /data/nginxconfig.io/src/static/nginx.svg location /img { rewrite &amp;#39;^/img/(.*)$&amp;#39; /static/$1; } location /static { root /data/nginxconfig.io/src; index nginx.svg; } 2 # https://localhost/photo/nginx.svg can access /data/nginxconfig.io/src/static/nginx.svg location /photo { root /data/nginxconfig.io/src; try_files $uri /$uri @pic; } location @pic { rewrite &amp;#39;^/photo/(.</description></item><item><title>Vagrant docs</title><link>https://linzeyan.github.io/notes/docs/vagrant/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/vagrant/</guid><description> Vagrantfile template docker Nginx hyperv CentOS7 Win2019 virtualbox Vagrantfile vmware Vagrantfile multi Vagrantfile others common Vagrantfile Metasploitable3 Vagrantfile</description></item><item><title>Zabbix docs</title><link>https://linzeyan.github.io/notes/docs/zabbix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://linzeyan.github.io/notes/docs/zabbix/</guid><description>send alert Use Webhook, Create Channel and Webhook in Mattermost, and put script to $(grep AlertScriptsPath /etc/zabbix/zabbix_server.conf). Create Media types in Zabbix(Administration -&amp;gt; Medai types). Add media to user(Administration -&amp;gt; Users -&amp;gt; Media). Create action(Configuration -&amp;gt; Actions -&amp;gt; Trigger actions)。 Debug(Write log in script). Media types: PROBLEM:\nProblem started at {EVENT.TIME} on {EVENT.DATE}\n 問題: {EVENT.NAME}\n 主機: {HOST.NAME}\nSeverity: {EVENT.SEVERITY}\n 目前數值: {EVENT.OPDATA}\n 問題 ID: {EVENT.ID}\n{TRIGGER.URL} RECOVERY:\nProblem has been resolved at {EVENT.RECOVERY.TIME} on {EVENT.</description></item></channel></rss>